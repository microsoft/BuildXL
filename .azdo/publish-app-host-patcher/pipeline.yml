trigger: none

parameters:
  - name: AppHostPatcherVersion
    type: string

variables:
  - name: AppHostPatcherRootDir
    value: $(Agent.TempDirectory)/AppHostPatcher
  - name: WindowsPlatform
    value: win-x64
  - name: LinuxPlatform
    value: linux-x64
  - name: MacOSPlatform
    value: osx-x64
  - name: BasePackageName
    value: BuildXL.Tools.AppHostPatcher

resources:
  repositories:
    - repository: 1esPipelines
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
  parameters:
    sdl:
      sourceAnalysisPool:
        name: Windows-SDL-Agents
        os: windows

    stages:
      - stage: BuildAppHostPatcher
        displayName: Build, package, and push AppHostPatcher
        jobs:
          - template: /.azdo/publish-app-host-patcher/build-app-host-patcher.yml@self
            parameters:
              platform: win-x64
              pool: 
                name: BuildXL-DevOpsAgents-Selfhost-BuildCache
                os: windows
                demands: ImageOverride -equals 1ESPT-Win2022-PME-3
              jobName: windows

          - template: /.azdo/publish-app-host-patcher/build-app-host-patcher.yml@self
            parameters:
              platform: linux-x64
              pool: 
                name: BuildXL-DevOpsAgents-Selfhost-BuildCache
                image: ubuntu-22.04-PME-GPT
                os: linux
              jobName: linux

          - template: /.azdo/publish-app-host-patcher/build-app-host-patcher.yml@self
            parameters:
              platform: osx-x64
              pool: 
                name: Azure Pipelines
                os: macOs
                vmImage: macos-latest
              jobName: macos

          - job: Publish
            displayName: Pack and Publish AppHostPatcher Nuget Package
            dependsOn:
              - windows
              - linux
              - macos
            pool:
              name: BuildXL-DevOpsAgents-Selfhost-BuildCache
              os: windows
              demands: ImageOverride -equals 1ESPT-Win2022-PME-3

            steps:
              - task: PowerShell@2
                displayName: Prepare Nuget Package directory
                inputs:
                  targetType: 'filePath'
                  filePath: '$(Build.SourcesDirectory)/.azdo/scripts/PrepareAppHostPatcherRuntimePackage.ps1'
                  arguments: '-packageVersion ${{ parameters.AppHostPatcherVersion }} -outputDirectory $(AppHostPatcherRootDir) -basePackageName $(BasePackageName)'
               
              - task: PowerShell@2
                displayName: Prepare packaging directory
                inputs:
                  targetType: 'inline'
                  script: |
                    New-Item -ItemType Directory -Path "$(AppHostPatcherRootDir)/Package/tools" -Force
                    Copy-Item -Path "$(AppHostPatcherRootDir)/$(BasePackageName).nuspec" -Destination "$(AppHostPatcherRootDir)/Package"
              
              - template: /.azdo/publish-app-host-patcher/download-app-host-patcher-artifacts.yml@self
                parameters:
                  windowsPlatform: $(WindowsPlatform)
                  linuxPlatform: $(LinuxPlatform)
                  macosPlatform: $(MacOSPlatform)
                  targetRootDirectory: $(AppHostPatcherRootDir)

              - task: NuGetCommand@2
                displayName: 'ðŸ“¦ Pack Nuget Package'
                inputs:
                  command: 'pack'
                  packagesToPack: '$(AppHostPatcherRootDir)/Package/$(BasePackageName).nuspec'
                  packDestination: '$(Agent.TempDirectory)/AppHostPatcherPackage'
                  versioningScheme: 'off'

              - template: /.azdo/common/generate-access-token.yml@self
                parameters:
                  AccessTokenVariable: BuildXL-Pipeline-AccessToken

              - template: /.azdo/common/set-nuget-endpoint.yml@self
                parameters:
                  NuGetServiceConnectionId: '15735478-03ea-4f29-ab6f-04026188ebc8'
                  NuGetServiceConnectionName: 'mseng-Domino-BuildXL-CloudBuild_BuildXL.Selfhost'
                  AccessToken: $(BuildXL-Pipeline-AccessToken)

              - task: 1ES.PublishNuget@1
                displayName: Publish Nuget package to Domino-BuildXL feed
                inputs:
                  packagesToPush: '$(Agent.TempDirectory)/AppHostPatcherPackage/*.nupkg'
                  packageParentPath: $(Agent.TempDirectory)/AppHostPatcherPackage
                  nuGetFeedType: external
                  publishPackageMetadata: true
                  publishFeedCredentials: 'mseng-Domino-BuildXL-CloudBuild_BuildXL.Selfhost'

              - template: /.azdo/common/set-nuget-endpoint.yml@self
                parameters:
                  NuGetServiceConnectionId: '06cc4f73-9c24-4070-a2fd-99d867cdc1ef'
                  NuGetServiceConnectionName: 'mseng-Domino-BuildXL-mseng_PipelineTools_BuildXL.External.Dependencies'
                  AccessToken: $(BuildXL-Pipeline-AccessToken)

              - task: 1ES.PublishNuget@1
                displayName: Publish Nuget package to BuildXL External feed
                condition: succeeded()
                inputs:
                  packagesToPush: '$(Agent.TempDirectory)/AppHostPatcherPackage/*.nupkg'
                  packageParentPath: $(Agent.TempDirectory)/AppHostPatcherPackage
                  nuGetFeedType: external
                  publishFeedCredentials: 'mseng-Domino-BuildXL-mseng_PipelineTools_BuildXL.External.Dependencies'
                  publishPackageMetadata: true            

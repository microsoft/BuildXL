# This pipeline will build the BuildXL NPM package on a Linux agent and then push to https://dev.azure.com/mseng/Domino/_artifacts/feed/BuildXL.experimental
# This feed can be upstreamed by our customers: with this, we can use custom bits in their workflows for debugging purposes
trigger: none # Manually run

parameters:
# Whether to build the release or debug version of BuildXL
- name: Flavor
  type: string
  values:
  - release
  - debug
  default: release
# The branch of the repo to check out and build 
- name: branch
  type: string
# The name of the package for npm. Avoid using hyphens or dots
- name: PackageName
  type: string

# Whether to push the package to the BuildXL.experimental NPM feed
- name: pushToNpm
  type: boolean

# Whether to push the package to the BuildXL.experimental Nuget feed
- name: pushToNuget
  type: boolean

- name: linuxImage
  type: string
  default: ubuntu-22.04-PME-GPT

resources:
  repositories:
  - repository: BuildXL.Internal
    type: git
    name: Domino/BuildXL.Internal
    ref: ${{ parameters.branch }}

jobs:
- job: Build_Linux
  displayName: Build packages and push to pipeline artifacts (${{ parameters.Flavor }})
  pool:
    name: BuildXL-DevOpsAgents-Selfhost-BuildCache
    os: linux
    demands:     
    - ImageOverride -equals ${{ parameters.linuxImage }}

  steps:
  - checkout: BuildXL.Internal

  - template: /.azdo/common/use-latest-dotnet-sdk.yml

  - template: /.azdo/common/generate-access-token.yml
    parameters:
      AccessTokenVariable: BuildXL-Pipeline-AccessToken

  - bash: |
      sudo mkdir /home/subst
      sudo mount --verbose --bind $(Build.SourcesDirectory) /home/subst
    displayName: Bind /home/subst to sources directory  

  - bash: >-
      set -eu

      # Replace the registry to point to the BuildXL.experimental feed
      # This value ends up in the .npmrc file in the package, and that affects
      # the nugetAuthenticate task in the publishing job below
      
      sed -i "s|https://1essharedassets.pkgs.visualstudio.com/_packaging/BuildXL/npm/registry/|https://pkgs.dev.azure.com/mseng/Domino/_packaging/BuildXL.experimental/npm/registry/|g" ./Public/Src/Deployment/npm/.npmrc ./Public/Src/Deployment/npm/package-linux.json
      
      echo ===================
      
      cat ./Public/Src/Deployment/npm/.npmrc
      
      echo ===================
      
      cat ./Public/Src/Deployment/npm/package-linux.json

      bash bxl.sh --internal --use-adobuildrunner
      --runner-arg /cacheConfigLogGeneratedConfiguration:true /p:BuildXLForceLaunchEBPFDaemon=0 
      /q:ReleaseLinux /q:DebugLinux "/f:output='/home/subst/Out/Bin/${{ parameters.Flavor }}/npm/*'oroutput='/home/subst/Out/Bin/${{ parameters.Flavor }}/pkgs/*'" "/p:Build.BuildId=0.1.0-${{ parameters.PackageName }}" "/p:[BuildXL.Branding]SourceIdentification=NpmExperimental-$(Build.BuildId)"
    displayName: Build packages
    workingDirectory: /home/subst
    env:
      AdoBuildRunnerInvocationKey: Build
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
      PAT1esSharedAssets: $(BuildXL-Pipeline-AccessToken)
      PATCloudBuild: $(BuildXL-Pipeline-AccessToken)

  - ${{ if eq(parameters.pushToNpm, true) }}:
    - task: PublishPipelineArtifact@1
      displayName: 'Publish npm package to consume on Windows job'
      inputs:
        artifactName: 'LinuxNpmPackage'
        path: '$(Build.SourcesDirectory)/Out/Bin/${{ parameters.Flavor }}/npm/linux-x64'

  - ${{ if eq(parameters.pushToNuget, true) }}:
    - task: PublishPipelineArtifact@1
      displayName: 'Publish npm package to consume on Windows job'
      inputs:
        artifactName: 'LinuxNugetPackage'
        path: '$(Build.SourcesDirectory)/Out/Bin/${{ parameters.Flavor }}/pkgs'


- job: Publish_Windows
  displayName: 'Publish on Windows'
  pool:
    name: BuildXL-DevOpsAgents-Selfhost-BuildCache
    os: windows
    demands: ImageOverride -equals 1ESPT-Win2022-PME-3
  dependsOn: Build_Linux
  steps:
  - checkout: none

  - ${{ if eq(parameters.pushToNuget, true) }}:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Nuget Artifact'
      inputs:
        artifactName: 'LinuxNugetPackage'
        path: '$(System.DefaultWorkingDirectory)/LinuxNugetPackage'

    - task: NuGetCommand@2
      displayName: 'Push nuget package to BuildXL.experimental feed (Linux)'
      inputs:
        command: push
        packagesToPush: '$(System.DefaultWorkingDirectory)/LinuxNugetPackage/BuildXL.linux-x64.0.1.0-${{ parameters.PackageName }}.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: 'Domino/BuildXL.experimental'

  - ${{ if eq(parameters.pushToNpm, true) }}:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Npm Artifact'
      inputs:
        artifactName: 'LinuxNpmPackage'
        path: '$(System.DefaultWorkingDirectory)/LinuxNpmPackage'

    - task: UseNode@1
      displayName: 'Install Node & npm toolchains on agent machine'
    
    - template: /.azdo/common/generate-access-token.yml
      parameters:
        accessTokenVariable: 'BuildXLPipelinesAccessToken'
        resource: '499b84ac-1321-427f-aa17-267ca6975798'
        serviceConnection: 'mseng-Domino-BuildXL-Pipelines'

    - template: /.azdo/common/set-npm-endpoint.yml
      parameters:
        accessTokenVariableName: 'BuildXLPipelinesAccessToken'
        npmServiceConnectionId: '1ffb65df-9b4c-4d67-84a0-8dbd3ab9b25f' # mseng-Domino-BuildXL-Domino_BuildXLExperimental_npm

    - task: npmAuthenticate@0
      displayName: 'Npm Authenticate'
      inputs:
        workingFile: '$(System.DefaultWorkingDirectory)/LinuxNpmPackage/.npmrc'
        customEndpoint: 'mseng-Domino-BuildXL-Domino_BuildXLExperimental_npm'

    - task: Npm@1
      displayName: 'Publish npm package to BuildXL.experimental feed (Linux)'
      inputs:
        command: custom
        workingDir: '$(System.DefaultWorkingDirectory)/LinuxNpmPackage'
        verbose: true
        customCommand: 'publish'
